{"version":3,"sources":["webpack://ballerinaHighlighter/./node_modules/monaco-editor/esm/vs/basic-languages/ini/ini.js"],"names":["__webpack_require__","r","__webpack_exports__","d","conf","language","comments","lineComment","brackets","autoClosingPairs","open","close","surroundingPairs","defaultToken","tokenPostfix","escapes","tokenizer","root","include","whitespace","string","cases","$#==$S2","token","next","@default"],"mappings":"mIAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,yBAAAE,IAAAJ,EAAAG,EAAAD,EAAA,6BAAAG,IAKO,IAAAD,EAAA,CACPE,SAAA,CACAC,YAAA,KAEAC,SAAA,CACA,KAAW,KACX,UACA,WAEAC,iBAAA,CACA,CAASC,KAAA,IAASC,MAAA,KAClB,CAASD,KAAA,IAAAC,MAAA,KACT,CAASD,KAAA,IAAAC,MAAA,KACT,CAASD,KAAA,IAAAC,MAAA,KACT,CAASD,KAAA,IAAAC,MAAA,MAETC,iBAAA,CACA,CAASF,KAAA,IAASC,MAAA,KAClB,CAASD,KAAA,IAAAC,MAAA,KACT,CAASD,KAAA,IAAAC,MAAA,KACT,CAASD,KAAA,IAAAC,MAAA,KACT,CAASD,KAAA,IAAAC,MAAA,OAGFN,EAAA,CACPQ,aAAA,GACAC,aAAA,OAEAC,QAAA,wEAEAC,UAAA,CACAC,KAAA,CAEA,0BAEA,2CAEA,CAAaC,QAAA,eAEb,iBAEA,qCACA,qCACA,2BACA,4BAEAC,WAAA,CACA,kBACA,eAAqB,YAErBC,OAAA,CACA,sBACA,6BACA,gCACA,SACAC,MAAA,CACAC,UAAA,CAAoCC,MAAA,SAAAC,KAAA,QACpCC,WAAA","file":"17.js","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    comments: {\n        lineComment: '#'\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')'],\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n    ],\n    surroundingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n    ]\n};\nexport var language = {\n    defaultToken: '',\n    tokenPostfix: '.ini',\n    // we include these common regular expressions\n    escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n    // The main tokenizer for our languages\n    tokenizer: {\n        root: [\n            // sections\n            [/^\\[[^\\]]*\\]/, 'metatag'],\n            // keys\n            [/(^\\w+)(\\s*)(\\=)/, ['key', '', 'delimiter']],\n            // whitespace\n            { include: '@whitespace' },\n            // numbers\n            [/\\d+/, 'number'],\n            // strings: recover on non-terminated strings\n            [/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid'],\n            [/'([^'\\\\]|\\\\.)*$/, 'string.invalid'],\n            [/\"/, 'string', '@string.\"'],\n            [/'/, 'string', '@string.\\''],\n        ],\n        whitespace: [\n            [/[ \\t\\r\\n]+/, ''],\n            [/^\\s*[#;].*$/, 'comment'],\n        ],\n        string: [\n            [/[^\\\\\"']+/, 'string'],\n            [/@escapes/, 'string.escape'],\n            [/\\\\./, 'string.escape.invalid'],\n            [/[\"']/, {\n                    cases: {\n                        '$#==$S2': { token: 'string', next: '@pop' },\n                        '@default': 'string'\n                    }\n                }]\n        ],\n    },\n};\n"],"sourceRoot":""}