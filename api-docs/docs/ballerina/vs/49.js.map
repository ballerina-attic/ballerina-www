{"version":3,"sources":["webpack://ballerinaHighlighter/./node_modules/monaco-editor/esm/vs/basic-languages/tcl/tcl.js"],"names":["__webpack_require__","r","__webpack_exports__","d","conf","language","brackets","autoClosingPairs","open","close","surroundingPairs","tokenPostfix","specialFunctions","mainFunctions","builtinFunctions","symbols","token","escapes","variables","tokenizer","root","cases","@specialFunctions","next","@mainFunctions","@builtinFunctions","@default","include","bracket","dstring","sstring","whitespace","newlineComment","nestedVariable","nestedCall","specialFunc"],"mappings":"mIAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,yBAAAE,IAAAJ,EAAAG,EAAAD,EAAA,6BAAAG,IAKO,IAAAD,EAAA,CACPE,SAAA,CACA,KAAW,KACX,UACA,WAEAC,iBAAA,CACA,CAASC,KAAA,IAASC,MAAA,KAClB,CAASD,KAAA,IAAAC,MAAA,KACT,CAASD,KAAA,IAAAC,MAAA,KACT,CAASD,KAAA,IAAAC,MAAA,KACT,CAASD,KAAA,IAAAC,MAAA,MAETC,iBAAA,CACA,CAASF,KAAA,IAASC,MAAA,KAClB,CAASD,KAAA,IAAAC,MAAA,KACT,CAASD,KAAA,IAAAC,MAAA,KACT,CAASD,KAAA,IAAAC,MAAA,KACT,CAASD,KAAA,IAAAC,MAAA,OAGFJ,EAAA,CACPM,aAAA,OACAC,iBAAA,CACA,qDACA,UACA,gBACA,gCAEAC,cAAA,CACA,0DACA,4BACA,sBACA,eACA,iCAEAC,iBAAA,CACA,uCACA,oDACA,qEACA,+EACA,4EACA,+CACA,0DACA,kDACA,+DACA,iFACA,6EACA,kEAEAC,QAAA,wBACAT,SAAA,CACA,CAASE,KAAA,IAAAC,MAAA,IAAAO,MAAA,yBACT,CAASR,KAAA,IAASC,MAAA,IAAYO,MAAA,mBAC9B,CAASR,KAAA,IAAAC,MAAA,IAAAO,MAAA,qBAETC,QAAA,mFACAC,UAAA,qCACAC,UAAA,CACAC,KAAA,CAEA,iBAA8BC,MAAA,CAC9BC,oBAAA,CAA8CN,MAAA,eAAAO,KAAA,gBAC9CC,iBAAA,UACAC,oBAAA,WACAC,WAAA,mBAEA,2BAAqC,WAErC,CAAaC,QAAA,eAEb,cAAiB,aACjB,wBACA,kBAA4B,CAAIX,MAAA,aAAAO,KAAA,oBAChC,iCACA,sCAEA,yBACA,iBAEA,KAAe,aAEf,MAAmBP,MAAA,eAAAY,QAAA,QAAAL,KAAA,aACnB,MAAmBP,MAAA,eAAAY,QAAA,QAAAL,KAAA,cAEnBM,QAAA,CACA,OAAoBb,MAAA,YAAAO,KAAA,gBACpB,kBAA4B,CAAIP,MAAA,aAAAO,KAAA,oBAChC,iCACA,0BACA,6BACA,MAAmBP,MAAA,eAAAY,QAAA,SAAAL,KAAA,UAEnBO,QAAA,CACA,OAAoBd,MAAA,YAAAO,KAAA,gBACpB,kBAA4B,CAAIP,MAAA,aAAAO,KAAA,oBAChC,iCACA,0BACA,6BACA,MAAmBP,MAAA,eAAAY,QAAA,SAAAL,KAAA,UAEnBQ,WAAA,CACA,uBACA,WAAwBf,MAAA,UAAAO,KAAA,oBACxB,0BAEAS,eAAA,CACA,oBACA,cAA2BhB,MAAA,UAAAO,KAAA,UAE3BU,eAAA,CACA,cAAoB,mBACpB,MAAgB,CAAIjB,MAAA,aAAAO,KAAA,UAEpBW,WAAA,CACA,OAAoBlB,MAAA,YAAAO,KAAA,gBACpB,OAAoBP,MAAA,YAAAO,KAAA,SACpB,CAAaI,QAAA,SAEbQ,YAAA,CACA,MAAmBnB,MAAA,SAAAO,KAAA,aACnB,MAAmBP,MAAA,SAAAO,KAAA,aACnB,gCAA6CP,MAAA,OAAAO,KAAA","file":"49.js","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')']\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n    ],\n    surroundingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n    ]\n};\nexport var language = {\n    tokenPostfix: '.tcl',\n    specialFunctions: [\n        'set', 'unset', 'rename', 'variable', 'proc', 'coroutine',\n        'foreach',\n        'incr', 'append',\n        'lappend', 'linsert', 'lreplace'\n    ],\n    mainFunctions: [\n        'if', 'then', 'elseif', 'else', 'case', 'switch', 'while', 'for',\n        'break', 'continue', 'return',\n        'package', 'namespace',\n        'catch', 'exit',\n        'eval', 'expr', 'uplevel', 'upvar'\n    ],\n    builtinFunctions: [\n        'file', 'info', 'concat', 'join', 'lindex',\n        'list', 'llength', 'lrange', 'lsearch', 'lsort', 'split',\n        'array', 'parray', 'binary', 'format', 'regexp', 'regsub', 'scan', 'string',\n        'subst', 'dict', 'cd', 'clock', 'exec', 'glob', 'pid', 'pwd', 'close', 'eof', 'fblocked',\n        'fconfigure', 'fcopy', 'fileevent', 'flush', 'gets', 'open', 'puts', 'read', 'seek',\n        'socket', 'tell', 'interp', 'after', 'auto_execok',\n        'auto_load', 'auto_mkindex', 'auto_reset', 'bgerror', 'error',\n        'global', 'history', 'load', 'source', 'time', 'trace',\n        'unknown', 'unset', 'update', 'vwait', 'winfo', 'wm', 'bind', 'event',\n        'pack', 'place', 'grid', 'font', 'bell', 'clipboard', 'destroy', 'focus', 'grab', 'lower',\n        'option', 'raise', 'selection', 'send', 'tk', 'tkwait', 'tk_bisque', 'tk_focusNext',\n        'tk_focusPrev', 'tk_focusFollowsMouse', 'tk_popup', 'tk_setPalette'\n    ],\n    symbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\n    brackets: [\n        { open: '(', close: ')', token: 'delimiter.parenthesis' },\n        { open: '{', close: '}', token: 'delimiter.curly' },\n        { open: '[', close: ']', token: 'delimiter.square' }\n    ],\n    escapes: /\\\\(?:[abfnrtv\\\\\"'\\[\\]\\{\\};\\$]|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n    variables: /(?:\\$+(?:(?:\\:\\:?)?[a-zA-Z_]\\w*)+)/,\n    tokenizer: {\n        root: [\n            // identifiers and keywords\n            [/[a-zA-Z_]\\w*/, { cases: {\n                        '@specialFunctions': { token: 'keyword.flow', next: '@specialFunc' },\n                        '@mainFunctions': 'keyword',\n                        '@builtinFunctions': 'variable',\n                        '@default': 'operator.scss'\n                    } }],\n            [/\\s+\\-+(?!\\d|\\.)\\w*|{\\*}/, 'metatag'],\n            // whitespace\n            { include: '@whitespace' },\n            // delimiters and operators\n            [/[{}()\\[\\]]/, '@brackets'],\n            [/@symbols/, 'operator'],\n            [/\\$+(?:\\:\\:)?\\{/, { token: 'identifier', next: '@nestedVariable' }],\n            [/@variables/, 'type.identifier'],\n            [/\\.(?!\\d|\\.)[\\w\\-]*/, 'operator.sql'],\n            // numbers\n            [/\\d+(\\.\\d+)?/, 'number'],\n            [/\\d+/, 'number'],\n            // delimiter\n            [/;/, 'delimiter'],\n            // strings\n            [/\"/, { token: 'string.quote', bracket: '@open', next: '@dstring' }],\n            [/'/, { token: 'string.quote', bracket: '@open', next: '@sstring' }]\n        ],\n        dstring: [\n            [/\\[/, { token: '@brackets', next: '@nestedCall' }],\n            [/\\$+(?:\\:\\:)?\\{/, { token: 'identifier', next: '@nestedVariable' }],\n            [/@variables/, 'type.identifier'],\n            [/[^\\\\$\\[\\]\"]+/, 'string'],\n            [/@escapes/, 'string.escape'],\n            [/\"/, { token: 'string.quote', bracket: '@close', next: '@pop' }],\n        ],\n        sstring: [\n            [/\\[/, { token: '@brackets', next: '@nestedCall' }],\n            [/\\$+(?:\\:\\:)?\\{/, { token: 'identifier', next: '@nestedVariable' }],\n            [/@variables/, 'type.identifier'],\n            [/[^\\\\$\\[\\]']+/, 'string'],\n            [/@escapes/, 'string.escape'],\n            [/'/, { token: 'string.quote', bracket: '@close', next: '@pop' }]\n        ],\n        whitespace: [\n            [/[ \\t\\r\\n]+/, 'white'],\n            [/#.*\\\\$/, { token: 'comment', next: '@newlineComment' }],\n            [/#.*(?!\\\\)$/, 'comment']\n        ],\n        newlineComment: [\n            [/.*\\\\$/, 'comment'],\n            [/.*(?!\\\\)$/, { token: 'comment', next: '@pop' }]\n        ],\n        nestedVariable: [\n            [/[^\\{\\}\\$]+/, 'type.identifier'],\n            [/\\}/, { token: 'identifier', next: '@pop' }]\n        ],\n        nestedCall: [\n            [/\\[/, { token: '@brackets', next: '@nestedCall' }],\n            [/\\]/, { token: '@brackets', next: '@pop' }],\n            { include: 'root' }\n        ],\n        specialFunc: [\n            [/\"/, { token: 'string', next: '@dstring' }],\n            [/'/, { token: 'string', next: '@sstring' }],\n            [/(?:(?:\\:\\:?)?[a-zA-Z_]\\w*)+/, { token: 'type', next: '@pop' }],\n        ]\n    }\n};\n"],"sourceRoot":""}