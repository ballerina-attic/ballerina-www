{"version":3,"sources":["webpack://ballerinaHighlighter/./node_modules/monaco-editor/esm/vs/basic-languages/st/st.js"],"names":["__webpack_require__","r","__webpack_exports__","d","conf","language","comments","lineComment","blockComment","brackets","autoClosingPairs","open","close","notIn","surroundingPairs","folding","markers","start","RegExp","end","defaultToken","tokenPostfix","ignoreCase","token","keywords","constant","defineKeywords","typeKeywords","operators","builtinVariables","builtinFunctions","symbols","escapes","tokenizer","root","cases","@operators","@keywords","@typeKeywords","@defineKeywords","@constant","@builtinVariables","@builtinFunctions","@default","include","bracket","next","comment","comment2","whitespace","string_dq","string_sq"],"mappings":"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","file":"47.js","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    comments: {\n        lineComment: '//',\n        blockComment: ['(*', '*)'],\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')'],\n        ['var', 'end_var'],\n        ['var_input', 'end_var'],\n        ['var_output', 'end_var'],\n        ['var_in_out', 'end_var'],\n        ['var_temp', 'end_var'],\n        ['var_global', 'end_var'],\n        ['var_access', 'end_var'],\n        ['var_external', 'end_var'],\n        ['type', 'end_type'],\n        ['struct', 'end_struct'],\n        ['program', 'end_program'],\n        ['function', 'end_function'],\n        ['function_block', 'end_function_block'],\n        ['action', 'end_action'],\n        ['step', 'end_step'],\n        ['initial_step', 'end_step'],\n        ['transaction', 'end_transaction'],\n        ['configuration', 'end_configuration'],\n        ['tcp', 'end_tcp'],\n        ['recource', 'end_recource'],\n        ['channel', 'end_channel'],\n        ['library', 'end_library'],\n        ['folder', 'end_folder'],\n        ['binaries', 'end_binaries'],\n        ['includes', 'end_includes'],\n        ['sources', 'end_sources']\n    ],\n    autoClosingPairs: [\n        { open: '[', close: ']' },\n        { open: '{', close: '}' },\n        { open: '(', close: ')' },\n        { open: '/*', close: '*/' },\n        { open: '\\'', close: '\\'', notIn: ['string_sq'] },\n        { open: '\"', close: '\"', notIn: ['string_dq'] },\n        { open: 'var', close: 'end_var' },\n        { open: 'var_input', close: 'end_var' },\n        { open: 'var_output', close: 'end_var' },\n        { open: 'var_in_out', close: 'end_var' },\n        { open: 'var_temp', close: 'end_var' },\n        { open: 'var_global', close: 'end_var' },\n        { open: 'var_access', close: 'end_var' },\n        { open: 'var_external', close: 'end_var' },\n        { open: 'type', close: 'end_type' },\n        { open: 'struct', close: 'end_struct' },\n        { open: 'program', close: 'end_program' },\n        { open: 'function', close: 'end_function' },\n        { open: 'function_block', close: 'end_function_block' },\n        { open: 'action', close: 'end_action' },\n        { open: 'step', close: 'end_step' },\n        { open: 'initial_step', close: 'end_step' },\n        { open: 'transaction', close: 'end_transaction' },\n        { open: 'configuration', close: 'end_configuration' },\n        { open: 'tcp', close: 'end_tcp' },\n        { open: 'recource', close: 'end_recource' },\n        { open: 'channel', close: 'end_channel' },\n        { open: 'library', close: 'end_library' },\n        { open: 'folder', close: 'end_folder' },\n        { open: 'binaries', close: 'end_binaries' },\n        { open: 'includes', close: 'end_includes' },\n        { open: 'sources', close: 'end_sources' }\n    ],\n    surroundingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n        { open: 'var', close: 'end_var' },\n        { open: 'var_input', close: 'end_var' },\n        { open: 'var_output', close: 'end_var' },\n        { open: 'var_in_out', close: 'end_var' },\n        { open: 'var_temp', close: 'end_var' },\n        { open: 'var_global', close: 'end_var' },\n        { open: 'var_access', close: 'end_var' },\n        { open: 'var_external', close: 'end_var' },\n        { open: 'type', close: 'end_type' },\n        { open: 'struct', close: 'end_struct' },\n        { open: 'program', close: 'end_program' },\n        { open: 'function', close: 'end_function' },\n        { open: 'function_block', close: 'end_function_block' },\n        { open: 'action', close: 'end_action' },\n        { open: 'step', close: 'end_step' },\n        { open: 'initial_step', close: 'end_step' },\n        { open: 'transaction', close: 'end_transaction' },\n        { open: 'configuration', close: 'end_configuration' },\n        { open: 'tcp', close: 'end_tcp' },\n        { open: 'recource', close: 'end_recource' },\n        { open: 'channel', close: 'end_channel' },\n        { open: 'library', close: 'end_library' },\n        { open: 'folder', close: 'end_folder' },\n        { open: 'binaries', close: 'end_binaries' },\n        { open: 'includes', close: 'end_includes' },\n        { open: 'sources', close: 'end_sources' }\n    ],\n    folding: {\n        markers: {\n            start: new RegExp(\"^\\\\s*#pragma\\\\s+region\\\\b\"),\n            end: new RegExp(\"^\\\\s*#pragma\\\\s+endregion\\\\b\")\n        }\n    }\n};\nexport var language = {\n    defaultToken: '',\n    tokenPostfix: '.st',\n    ignoreCase: true,\n    brackets: [\n        { token: 'delimiter.curly', open: '{', close: '}' },\n        { token: 'delimiter.parenthesis', open: '(', close: ')' },\n        { token: 'delimiter.square', open: '[', close: ']' }\n    ],\n    keywords: ['if', 'end_if', 'elsif', 'else', 'case', 'of', 'to',\n        'do', 'with', 'by', 'while', 'repeat', 'end_while', 'end_repeat', 'end_case',\n        'for', 'end_for', 'task', 'retain', 'non_retain', 'constant', 'with', 'at',\n        'exit', 'return', 'interval', 'priority', 'address', 'port', 'on_channel',\n        'then', 'iec', 'file', 'uses', 'version', 'packagetype', 'displayname',\n        'copyright', 'summary', 'vendor', 'common_source', 'from'],\n    constant: ['false', 'true', 'null'],\n    defineKeywords: [\n        'var', 'var_input', 'var_output', 'var_in_out', 'var_temp', 'var_global',\n        'var_access', 'var_external', 'end_var',\n        'type', 'end_type', 'struct', 'end_struct', 'program', 'end_program',\n        'function', 'end_function', 'function_block', 'end_function_block',\n        'configuration', 'end_configuration', 'tcp', 'end_tcp', 'recource',\n        'end_recource', 'channel', 'end_channel', 'library', 'end_library',\n        'folder', 'end_folder', 'binaries', 'end_binaries', 'includes',\n        'end_includes', 'sources', 'end_sources',\n        'action', 'end_action', 'step', 'initial_step', 'end_step', 'transaction', 'end_transaction'\n    ],\n    typeKeywords: ['int', 'sint', 'dint', 'lint', 'usint', 'uint', 'udint', 'ulint',\n        'real', 'lreal', 'time', 'date', 'time_of_day', 'date_and_time', 'string',\n        'bool', 'byte', 'world', 'dworld', 'array', 'pointer', 'lworld'],\n    operators: ['=', '>', '<', ':', ':=', '<=', '>=', '<>', '&', '+', '-', '*', '**',\n        'MOD', '^', 'or', 'and', 'not', 'xor', 'abs', 'acos', 'asin', 'atan', 'cos',\n        'exp', 'expt', 'ln', 'log', 'sin', 'sqrt', 'tan', 'sel', 'max', 'min', 'limit',\n        'mux', 'shl', 'shr', 'rol', 'ror', 'indexof', 'sizeof', 'adr', 'adrinst',\n        'bitadr', 'is_valid'],\n    builtinVariables: [],\n    builtinFunctions: ['sr', 'rs', 'tp', 'ton', 'tof', 'eq', 'ge', 'le', 'lt',\n        'ne', 'round', 'trunc', 'ctd', 'сtu', 'ctud', 'r_trig', 'f_trig',\n        'move', 'concat', 'delete', 'find', 'insert', 'left', 'len', 'replace',\n        'right', 'rtc'],\n    // we include these common regular expressions\n    symbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\n    // C# style strings\n    escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n    // The main tokenizer for our languages\n    tokenizer: {\n        root: [\n            [/(T|DT|TOD)#[0-9:-_shmyd]*/, 'tag'],\n            [/[A-Za-z]{1,6}#[0-9]*/, 'tag'],\n            [/\\%(I|Q|M)(X|B|W|D|L)[0-9\\.]*/, 'tag'],\n            [/\\%(I|Q|M)[0-9\\.]*/, 'tag'],\n            [/(TO_|CTU_|CTD_|CTUD_|MUX_|SEL_)[A_Za-z]*/, 'predefined'],\n            [/[A_Za-z]*(_TO_)[A_Za-z]*/, 'predefined'],\n            // identifiers and keywords\n            [/[a-zA-Z_]\\w*/, {\n                    cases: {\n                        '@operators': 'operators',\n                        '@keywords': 'keyword',\n                        '@typeKeywords': 'type',\n                        '@defineKeywords': 'variable',\n                        '@constant': 'constant',\n                        '@builtinVariables': 'predefined',\n                        '@builtinFunctions': 'predefined',\n                        '@default': 'identifier'\n                    }\n                }],\n            { include: '@whitespace' },\n            [/[;.]/, 'delimiter'],\n            [/[{}()\\[\\]]/, '@brackets'],\n            [/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, 'number.float'],\n            [/16#[0-9a-fA-F]+/, 'number.hex'],\n            [/2#[0-9_]+/, 'number.binary'],\n            [/\\d+/, 'number'],\n            [/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid'],\n            [/\"/, { token: 'string.quote', bracket: '@open', next: '@string_dq' }],\n            [/'/, { token: 'string.quote', bracket: '@open', next: '@string_sq' }],\n            [/'[^\\\\']'/, 'string'],\n            [/(')(@escapes)(')/, ['string', 'string.escape', 'string']],\n            [/'/, 'string.invalid']\n        ],\n        comment: [\n            [/[^\\/*]+/, 'comment'],\n            [/\\/\\*/, 'comment', '@push'],\n            [\"\\\\*/\", 'comment', '@pop'],\n            [/[\\/*]/, 'comment']\n        ],\n        comment2: [\n            [/[^\\(*]+/, 'comment'],\n            [/\\(\\*/, 'comment', '@push'],\n            [\"\\\\*\\\\)\", 'comment', '@pop'],\n            [/[\\(*]/, 'comment']\n        ],\n        whitespace: [\n            [/[ \\t\\r\\n]+/, 'white'],\n            [/\\/\\/.*$/, 'comment'],\n            [/\\/\\*/, 'comment', '@comment'],\n            [/\\(\\*/, 'comment', '@comment2'],\n        ],\n        string_dq: [\n            [/[^\\\\\"]+/, 'string'],\n            [/@escapes/, 'string.escape'],\n            [/\\\\./, 'string.escape.invalid'],\n            [/\"/, { token: 'string.quote', bracket: '@close', next: '@pop' }]\n        ],\n        string_sq: [\n            [/[^\\\\']+/, 'string'],\n            [/@escapes/, 'string.escape'],\n            [/\\\\./, 'string.escape.invalid'],\n            [/'/, { token: 'string.quote', bracket: '@close', next: '@pop' }]\n        ]\n    }\n};\n"],"sourceRoot":""}